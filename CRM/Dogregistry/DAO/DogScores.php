<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from ca.sdda.dogregistry/xml/schema/CRM/Dogregistry/DogScores.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:193cf3c5a0fb7cbe6ff528d92f65c802)
 */
use CRM_Dogregistry_ExtensionUtil as E;

/**
 * Database access object for the DogScores entity.
 */
class CRM_Dogregistry_DAO_DogScores extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_dog_scores';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique DogScores ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Registered event
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Event;

  /**
   * FK to Trial Levels
   *
   * @var string|null
   *   (SQL type: varchar(5))
   *   Note that values will be retrieved from the database as a string.
   */
  public $Levels;

  /**
   * FK to Registered Dogs
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $DogId;

  /**
   * A or W
   *
   * @var string|null
   *   (SQL type: varchar(15))
   *   Note that values will be retrieved from the database as a string.
   */
  public $Stream;

  /**
   * FK to Registered Dogs
   *
   * @var int|string|null
   *   (SQL type: int)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Sequence;

  /**
   * FK to contact ID
   *
   * @var int|string|null
   *   (SQL type: int)
   *   Note that values will be retrieved from the database as a string.
   */
  public $HandlerId;

  /**
   * value of score
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Score;

  /**
   * Passed
   *
   * @var int|string|null
   *   (SQL type: int)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Pass;

  /**
   * Date of score
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Event_date;

  /**
   * Judge contact id
   *
   * @var int|string|null
   *   (SQL type: int)
   *   Note that values will be retrieved from the database as a string.
   */
  public $Judge;

  /**
   * first title use
   *
   * @var int|string|null
   *   (SQL type: int)
   *   Note that values will be retrieved from the database as a string.
   */
  public $UsedForFirstTitle;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_dog_scores';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Dog Scoreses') : E::ts('Dog Scores');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'Levels', 'civicrm_trial_levels', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'DogId', 'civicrm_registered_dogs', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'HandlerId', 'civicrm_contact', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique DogScores ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.id',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Dogscore ID"),
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'Event' => [
          'name' => 'Event',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Event'),
          'description' => E::ts('Registered event'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Event',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Event Id"),
          ],
          'add' => NULL,
        ],
        'Levels' => [
          'name' => 'Levels',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Levels'),
          'description' => E::ts('FK to Trial Levels'),
          'maxlength' => 5,
          'size' => CRM_Utils_Type::SIX,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Levels',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'FKClassName' => 'CRM_Dogregistry_DAO_TrialLevels',
          'html' => [
            'label' => E::ts("Trial Level"),
          ],
          'add' => NULL,
        ],
        'DogId' => [
          'name' => 'DogId',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Dogid'),
          'description' => E::ts('FK to Registered Dogs'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.DogId',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'FKClassName' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'html' => [
            'label' => E::ts("Registered Dog ID"),
          ],
          'add' => NULL,
        ],
        'Stream' => [
          'name' => 'Stream',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Stream'),
          'description' => E::ts('A or W'),
          'maxlength' => 15,
          'size' => CRM_Utils_Type::TWELVE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Stream',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Stream"),
          ],
          'add' => NULL,
        ],
        'Sequence' => [
          'name' => 'Sequence',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Sequence'),
          'description' => E::ts('FK to Registered Dogs'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Sequence',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Sequence"),
          ],
          'add' => NULL,
        ],
        'HandlerId' => [
          'name' => 'HandlerId',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Handlerid'),
          'description' => E::ts('FK to contact ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.HandlerId',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Contact ID"),
          ],
          'add' => NULL,
        ],
        'Score' => [
          'name' => 'Score',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Score'),
          'description' => E::ts('value of score'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Score',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Score"),
          ],
          'add' => NULL,
        ],
        'Pass' => [
          'name' => 'Pass',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Pass'),
          'description' => E::ts('Passed'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Pass',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Pass"),
          ],
          'add' => NULL,
        ],
        'Event_date' => [
          'name' => 'Event_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Event Date'),
          'description' => E::ts('Date of score'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Event_date',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Event Date"),
          ],
          'add' => NULL,
        ],
        'Judge' => [
          'name' => 'Judge',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Judge'),
          'description' => E::ts('Judge contact id'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.Judge',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Judge Contact ID"),
          ],
          'add' => NULL,
        ],
        'UsedForFirstTitle' => [
          'name' => 'UsedForFirstTitle',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Usedforfirsttitle'),
          'description' => E::ts('first title use'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_dog_scores.UsedForFirstTitle',
          'table_name' => 'civicrm_dog_scores',
          'entity' => 'DogScores',
          'bao' => 'CRM_Dogregistry_DAO_DogScores',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Used for First Title"),
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'dog_scores', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'dog_scores', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}

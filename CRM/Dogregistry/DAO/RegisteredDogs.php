<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from ca.sdda.dogregistry/xml/schema/CRM/Dogregistry/RegisteredDogs.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:935ea2e6bc0df256e8e79581a49dcde4)
 */
use CRM_Dogregistry_ExtensionUtil as E;

/**
 * Database access object for the RegisteredDogs entity.
 */
class CRM_Dogregistry_DAO_RegisteredDogs extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '4.4';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_registered_dogs';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique RegisteredDogs ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Registered dog Name
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $registered_name;

  /**
   * Dogs Call Name
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $call_name;

  /**
   * Name for certs
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $preferred_name;

  /**
   * Dog gender
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $sex;

  /**
   * Spayed or Neutered
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $altered;

  /**
   * Date of birth
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $date_of_birth;

  /**
   * Active date
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $active_date;

  /**
   * Inactive Date
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $inactive_date;

  /**
   * Dog breed
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $breed_name;

  /**
   * Scent titles
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $other_titles;

  /**
   * Other titles
   *
   * @var string|null
   *   (SQL type: varchar(0))
   *   Note that values will be retrieved from the database as a string.
   */
  public $other_title_description;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_registered_dogs';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Registered Dogses') : E::ts('Registered Dogs');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'contact_id', 'civicrm_contact', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique RegisteredDogs ID'),
          'required' => TRUE,
          'where' => 'civicrm_registered_dogs.id',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => '4.4',
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('FK to Contact'),
          'where' => 'civicrm_registered_dogs.contact_id',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => '4.4',
        ],
        'registered_name' => [
          'name' => 'registered_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Registered Name'),
          'description' => E::ts('Registered dog Name'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.registered_name',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'call_name' => [
          'name' => 'call_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Call Name'),
          'description' => E::ts('Dogs Call Name'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.call_name',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'preferred_name' => [
          'name' => 'preferred_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Preferred Name'),
          'description' => E::ts('Name for certs'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.preferred_name',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'sex' => [
          'name' => 'sex',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Sex'),
          'description' => E::ts('Dog gender'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.sex',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'altered' => [
          'name' => 'altered',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Altered'),
          'description' => E::ts('Spayed or Neutered'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.altered',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'date_of_birth' => [
          'name' => 'date_of_birth',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Date Of Birth'),
          'description' => E::ts('Date of birth'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.date_of_birth',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'active_date' => [
          'name' => 'active_date',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Active Date'),
          'description' => E::ts('Active date'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.active_date',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'inactive_date' => [
          'name' => 'inactive_date',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Inactive Date'),
          'description' => E::ts('Inactive Date'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.inactive_date',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'breed_name' => [
          'name' => 'breed_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Breed Name'),
          'description' => E::ts('Dog breed'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.breed_name',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'other_titles' => [
          'name' => 'other_titles',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Other Titles'),
          'description' => E::ts('Scent titles'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.other_titles',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
        'other_title_description' => [
          'name' => 'other_title_description',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Other Title Description'),
          'description' => E::ts('Other titles'),
          'maxlength' => 0,
          'size' => CRM_Utils_Type::TWO,
          'where' => 'civicrm_registered_dogs.other_title_description',
          'table_name' => 'civicrm_registered_dogs',
          'entity' => 'RegisteredDogs',
          'bao' => 'CRM_Dogregistry_DAO_RegisteredDogs',
          'localizable' => 0,
          'add' => '4.4',
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'registered_dogs', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'registered_dogs', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
